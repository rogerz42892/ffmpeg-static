#!/bin/sh
noass=${1-0}
qsettings='-keyint_min 5 -g 15'
osize='320x180'
input=input.mov
output=test.mp4
m4v=test.m4v
target/bin/ffmpeg -y -i "$input" -loglevel verbose -threads 2 -acodec libfaac -ar 48000 -ab 192k -vcodec libx264 -coder 0 $qsettings \
    -qmin 10 -qmax 51 -sc_threshold 40 -qdiff 4 -i_qfactor 0.71 -qblur .5 -me_range 4 -me_method dia -subq 1 -refs 2 -b_strategy 1 -bf 16 \
    -flags +loop -b:v 400k -bt 300k -r 30 -s $osize -strict -2 -map_chapters -1 -map_metadata -1 -rc_eq 'blurCplx^(1-qComp)' \
    "$output" 2>&1 | tee test.log
err=$?
if [ $err -ne 0 ] ; then
    echo "ffmpeg FAIL: $input ($err)"
    exit $err
fi
target/bin/ffprobe $output 2>&1 | tee -a test.log
err=$?
if [ $err -ne 0 ] ; then
    echo "ffprobe FAIL: $output ($err)"
fi
egrep 'Duration|Stream' test.log > test.out
diff -q ref.out test.out
err=$?
if [ $err -ne 0 ] ; then
    echo "regression FAIL: `diff ref.out test.out`"
    exit $err
fi
echo "regression SUCCESS"
echo "checking libs"
if [ `uname` = 'Darwin' ] ; then
    otool -L target/bin/ffmpeg | awk '{print $1}' | sort | grep -v ffmpeg: | tee test.libs
    ref=osx_ref.libs
else
    ldd target/bin/ffmpeg | awk '{print $1}' | sort | tee test.libs
    ref=linux_ref.libs
fi
diff -q $ref test.libs
err=$?
if [ $err -ne 0 ] ; then
    echo "libs FAIL: `diff $ref test.libs`"
    exit $err
fi
echo "libs SUCCESS"
if [ $noass != '0' ] ; then
    exit 0
fi
target/bin/ffmpeg -y -i $output -vf subtitles=input.srt $m4v 2> /dev/null
err=$?
if [ $err -ne 0 ] ; then
    echo "ffmpeg embed srt FAIL: $input ($err)"
    exit $err
fi
echo "ffmpeg embed srt SUCCESS"
exit 0
